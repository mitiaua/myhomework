library(swirl)
install.packages("swirl")
library(swirl)
swirl()
5+7
x<- 5 + 7
ч
x
x - 3
y<- x-3
y
z<- c(1.1, 9, 3.14)
?с
??с
?c
?z
z
z<- c(z, 555, z)
c(z, 555, z)
z*2+100
my_sqrt<- sqrt(z-1)
my_sqrt
my_div< - z/my_sqrt
my_div<- z/my_sqrt
my_div
z + c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
z*2+1000
my_div
getwd()
ls()
x<- 9
ls
ls()
dir()
&list.files()
&list.files
?list.files
args()
args(list.files)
args(old.dir)
old.dir()
old.dir
old.dir<- x
old.dir<- getwd()
dir.create()
dir.create(testdir)
dir.create
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
dir()
file.exists("myster.R")
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R")
file.rename("mytest.R" to "mytest2.R")
file.rename("mytest.R") to "mytes2.R"
file.rename("mytest.R") to ("mytes2.R")
file.rename("mytest.R")
file.rename("mytest.R to mytest2.R")
file.rename("mytest.R" "to"" "mytest2.R")
file.rename("mytest.R" "to" "mytest2.R")
file.rename("mytest.R" to "mytest2.R")
file.rename()
file.rename("mytest.R", to "mytest2.R")
file.rename("mytest.R",to "mytest2.R")
file.rename("mytest.R",to ("mytest2.R")
divided
q
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R",to ("mytest3.R")
q
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
q
file.path("fplder1", "folder2")
file.path("folder1", "folder2")
?dir.create
dir.create("testdir3", file.path("testdir2"))
dir.create(file.path("testdir2", "testdir3", recursive = TRUE))
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
setwd()
setwd(dir)
q
setwd(old.dir)
unlink("testdir")
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
q
?':'
seq(1, 20)
seq(0, 10, by=0.5)
seq(0, 10, lenth=30)
my_seq<- seq(0, 10, lenth=30)
my_seq<- seq(5, 10, lenth=30)
my_seq<- seq(5, 10, length=30)
length("me_seq")
length(me_seq)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 00)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
num_vect<- c(0.5, 55, -10, 6)
q
tf<- num_vect < 1
tf
num_vect >= 6
q
my_char<- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my char, "Dmytro")
c(my_char, "Dmytro")
my_name<- c(my_char, "Swirl")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste("X", "Y", "Z", sep = "")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "")
paste(LETTERS, 1:4, sep = "-")
c(44, NA, 5, NA)
x<- c(44, NA, 5, NA)
q
x*3
y<- rnorm(1000)
z<- rep(NA, 1000)
my_data<- sample(c(y, z), 100)
my_na<- is.na(my_data)
my_na
me_data == NA
my_data == NA
sum(my_na, my_data)
sum(my_na)
mt_data
my_data
q
0/0
0/0
inf - inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y<- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
q
c(3, 5, 7)
[c(3, 5, 7)]
x[c(3, 5, 7)]
x (i.e. x[0])
x (1:40, x[0])
x (1:40, x[0])
q
x[0]
x[3000]
x[c(-2, -10)]
x[c(2, 10)]
x[-c(2, 10)]
vect<- c(foo = 11, bar = 2, norf = NA)
vect
q
names(vect)
vect2<- c(11, 2, NA)
names(vect2)<= c("foo", "bar", "norf")
names(vect2)<- c("foo", "bar", "norf")
identical(vect, vect2)
vect
vect2
vect["bar"]
vect[c("foo", "bar")]
my_vector<- c[1:20]
my_vector<- c(1:20)
my_vector<- c 1:20
my_vector<- 1:20
my_vector
dim(my_vector)
ltnght(my_vector)
lenght(my_vector)
length(my_vector)
dim(my_vector)<- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix<- my_vector
?matrix()
?matrix
my_matrix<- matrix(data = 1:20, nrow = 4, ncol = 5)
my_matrix2<- matrix(data = 1:20, nrow = 4, ncol = 5)
my_matrix2<- matrix(1:20, nrow = 4, ncol = 5)
my_matrix2<- matrix(1:20, 4, 5)
my_matrix2<- matrix(c = 1:20, nrow = 4, ncol = 5)
my_matrix2<- matrix(c(1:20), nrow = 4, ncol = 5)
my_matrix2<- matrix(c(1:20), nrow = 4, ncol = 5)
my_matrix2<- matrix(1:20, 4, 5)
matrix(1:20, 4, 5)
my_matrix2<- matrix(1:20, 4, 5)
my_matrix2 <- matrix(1:20, 4, 5)
q
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix2)
identical(my_matrix, my_matrix2)
patients <- matrix (Bill, Gina, Kelly)
patients <- matrix(Bill, Gina, Kelly)
patients <- matrix(c("Bill", "Gina", "Kelly")
wa
patients <- matrix(c("Bill", "Gina", "Kelly")
w
patients <- matrix(c("Bill", "Gina", "Kelly"))
patients<- matrix(c("Bill", "Gina", "Kelly"))
patients<- matrix(c("Bill", "Gina", "Kelly", "Sean"))
patients <- matrix(c("Bill", "Gina", "Kelly", "Sean"))
patients <- matrix(dimnames = list(c("Bill", "Gina", "Kelly", "Sean")))
patients <- matrix(list(c("Bill", "Gina", "Kelly", "Sean")))
q
info()
patients<- matrix(list(c("Bill", "Gina", "Kelly", "Sean")))
skip
patients<- matrix(c(4:3), 4, 3, list(c("Bill", "Gina", "Kelly", "Sean")))
patients<- matrix(c(4:3), 4, 3, TRUE, list(c("Bill", "Gina", "Kelly", "Sean")))
patients<- matrix(c("Bill", "Gina", "Kelly", "Sean"), 4, 3)))
patients<- matrix(c("Bill", "Gina", "Kelly", "Sean"), 4, 3))
patients<- matrix(c("Bill", "Gina", "Kelly", "Sean"), 4, 3)
patients<- matrix(c("Bill", "Gina", "Kelly", "Sean"))
patients <- matrix(c("Bill", "Gina", "Kelly", "Sean"))
shiny::runApp('C:/project')
runApp('C:/project')
runApp('C:/project')
runApp('C:/project')
runApp('C:/project')
runApp('C:/project')
runApp('C:/project')
runApp('C:/project')
runApp('C:/project')
rsconnect::setAccountInfo(name='mitiaua', token='B89A63B7B3DB9088535050C7B5514D92', secret='ulQ68A4XTRn54L8s+WaASruimlPledINZOKAGokR')
runApp('C:/project')
